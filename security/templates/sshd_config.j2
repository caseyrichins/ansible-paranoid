# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

#Port 22
AddressFamily inet
ListenAddress {{ ansible_default_ipv4.address }}
#ListenAddress ::

# Supported HostKey algorithms by order of preference.
HostKey /etc/ssh/ssh_host_ed25519_key
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key

# Ciphers and keying
#RekeyLimit default none
KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com


# Logging
#SyslogFacility AUTH
LogLevel VERBOSE

# Authentication:
# Password based logins are disabled - only public key based logins are allowed.
{% if sshd_config.password_login is defined and sshd_config.password_login == "enabled" %}
AuthenticationMethods publickey,password publickey
{% else %}
AuthenticationMethods publickey
{% endif %}

LoginGraceTime 1m
PermitRootLogin no
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

PubkeyAuthentication yes

# Expect .ssh/authorized_keys2 to be disregarded by default in future.
#AuthorizedKeysFile	.ssh/authorized_keys .ssh/authorized_keys2

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
{%- if sshd_config.password_login is defined and sshd_config.password_login == "enabled" %}
PasswordAuthentication yes
{% else %}
PasswordAuthentication no
{% endif %}
#PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
#X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
PrintMotd no
#PrintLastLog yes
#TCPKeepAlive yes
#UseLogin no
#PermitUserEnvironment no
#Compression delayed
ClientAliveInterval 30
ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
Banner /etc/issue
{%- if ansible_os_family == 'Debian' %}
DebianBanner no
{%- endif %}

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

# override default of no subsystems
Subsystem	sftp	/usr/lib/openssh/sftp-server -f AUTHPRIV -l INFO

{% if sshd_config.access.restrict is defined and sshd_config.access.restrict == true %}
  {%- if sshd_config.access.deny_users is defined and sshd_config.access.deny_users %}
DenyUsers {% for names in sshd_config.access.deny_users %} {{ names }}{% if not loop.last %}{% endif %}{% endfor %}
  {% endif %}
  {%- if sshd_config.access.allow_users is defined and sshd_config.access.allow_users %}
AllowUsers {% for names in sshd_config.access.allow_users %} {{ names }}{% if not loop.last %}{% endif %}{% endfor %}
  {% endif %}
  {%- if sshd_config.access.deny_groups is defined and sshd_config.access.deny_groups %}
DenyGroups {% for names in sshd_config.access.deny_groups %} {{ names }}{% if not loop.last %}{% endif %}{% endfor %}
  {% endif %}
  {%- if sshd_config.access.allow_groups is defined and sshd_config.access.allow_groups %}
AllowGroups {% for names in sshd_config.access.allow_groups %} {{ names }}{% if not loop.last %}{% endif %}{% endfor %}
  {% endif %}
{% endif %}



# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server
{% if sshd_config.root.remote_ip is defined and sshd_config.root.remote_ip and sshd_config.root.allow is defined and sshd_config.root.allow == true %}
    {% for remote_ip in sshd_config.root.remote_ip and sshd_config.root.remote_ip %}
Match Address {{ remote_ip }} User root
        PermitRootLogin forced-commands-only
        DisableForwarding yes
    {% endfor %}
{% endif %}
